#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# SETTINGS
#=================================================
ynh_script_progression --message="Storing installation settings..."

# Logging:
log_file="/var/log/$app/$app.log"
ynh_app_setting_set --app=$app --key=log_file --value="$log_file"

if [[ -n "$admin_route" ]]; then
    ynh_permission_create --permission="admin" --url="/$admin_route" --allowed="admins"
fi 

#=================================================
# SETUP LOG FILE
#=================================================
ynh_script_progression --message="Setup logging..."

myynh_setup_log_file

# Use logrotate to manage application logfile(s)
ynh_use_logrotate --logfile="$log_file" --specific_user=$app

#=================================================
# PYTHON VIRTUALENV
#=================================================
ynh_script_progression --message="Create and setup Python virtualenv..." --weight=45

ynh_add_config --template="requirements.txt" --destination="$install_dir/requirements.txt"

myynh_setup_python_venv

#=================================================
# SETUP DATABASE
#=================================================

if [ $db_type = "mariadb" ]
then

	ynh_script_progression --message="Creating a MySQL database..."

	db_name=$(ynh_sanitize_dbid --db_name=$app)
	db_user=$db_name
	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
	ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

elif [ $db_type = "postgresql" ]
then

	ynh_script_progression --message="Creating a PostgreSQL database..."

	db_name=$(ynh_sanitize_dbid --db_name=$app)
	db_user=$db_name
	ynh_app_setting_set --app=$app --key=db_name --value=$db_name
	ynh_psql_setup_db --db_user=$db_user --db_name=$db_name

else

	ynh_script_progression --message="Skipping database..." 
    db_name="None"
	db_user="None"

fi


#=================================================
# copy config files
#=================================================
ynh_script_progression --message="Create $app configuration files..."

ynh_add_config --template="gunicorn.conf.py" --destination="$install_dir/gunicorn.conf.py"

mkdir -p "$data_dir/flask-app"
ynh_add_config --template="__init__.py" --destination="$data_dir/flask-app/__init__.py"
ynh_add_config --template="settings.py" --destination="$data_dir/flask-app/settings.py"
ynh_app_setting_set --app=$app --key=main_folder --value="flask-app"
ynh_app_setting_set --app=$app --key=requirements_path --value=""
ynh_app_setting_set --app=$app --key=password --value=$password

# Add the password to this user
chpasswd <<< "${app}:${password}"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================
ynh_script_progression --message="Set file permissions..."

myynh_fix_file_permissions

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

ynh_add_nginx_config

ynh_add_systemd_config

yunohost service add $app --description="Gunicorn running a Flask app" --log="/var/log/$app/$app.log"

#=================================================
# Start the app server via systemd
#=================================================
ynh_script_progression --message="Starting systemd service '$app'..." --weight=5

ynh_systemd_action --service_name=$app --action="start" --log_path="$log_file"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --last
